generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id
  email     String   @unique
  name      String
  area      String
  password  String
  tags      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  contents Content[]
  contentUser ContentUser[]
}


model Project {
  id            String         @id @default(uuid())
  title         String
  description   String
  projectType   String
  coleaderId    String
  offers        Int
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  startDate     DateTime
  endDate       DateTime
  deadline      DateTime
  deliveryTime  DateTime
  roles         Role[]
  tags          Tag[]
  ownerId       String
  projectUsers  ProjectUser[]
}

model Role {
  id            String         @id @default(uuid())
  name          String
  count         Int
  projectId     String
  project       Project        @relation(fields: [projectId], references: [id])
  projectUsers  ProjectUser[]
}

model Tag {
  id            String         @id @default(uuid())
  name          String
  projectId     String
  project       Project        @relation(fields: [projectId], references: [id])
}

model ProjectUser {
  id            String         @id @default(uuid())
  projectId     String
  userId        String
  offerId       String
  status        String
  why           String
  abilities     String
  roleId        String
  project       Project        @relation(fields: [projectId], references: [id])
  role          Role           @relation(fields: [roleId], references: [id])
}

model Content {
  id          String       @id
  title       String
  description String
  links       String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  ownerId     String
  owner       User         @relation(fields: [ownerId], references: [id])
  contentUser ContentUser[]
}



model ContentUser {
  id         String   @id
  userId     String
  contentId  String
  abilities  String
  user       User     @relation(fields: [userId], references: [id])
  content    Content  @relation(fields: [contentId], references: [id])
}
